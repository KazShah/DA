--Practice 2--Basic
select * from employees
select * from employees where department='Sports' and gender='F'
select * from employees where salary>='100000' and gender='F' and region_id='4'
select * from employees where department='Automotive' or salary='90000'
select * from employees where salary<'40000' and (department='Clothing'or department='Pharmacy')
select * from employees where department!='Sports'
select * from employees where department <>'Sports'
select * from employees where email is NULL
select count(*) from employees where email is NULL
select * from employees where department in ('Sports','Clothing','Toys')
select * from employees where salary between 80000 AND 100000

CREATE TABLE cities (
  id INTEGER NOT NULL PRIMARY KEY,
  name VARCHAR(30) NOT NULL
);
INSERT INTO cities(id, name) values(1, 'Los Angeles');
INSERT INTO cities(id, name) values(2, 'Washington');
INSERT INTO cities(id, name) values(3, 'New York');

select * from cities order by name desc




select first_name,email from employees where salary>110000 and department ='Tools' and gender='F' 

select first_name, hire_date from employees where salary>165000 OR (department ='Sports' and gender='M')

select first_name, hire_date from employees where hire_date >= '2002-01-01' and hire_date <='2004-01-01'

select * from employees where salary >40000 and salary <100000 and department='Automotive' and gender='M' or department ='Toys' and gender='F'

select * from employees order by employee_id desc
select distinct department from employees
select distinct department from employees order by 1
select distinct department from employees limit 10
select distinct department from employees order by 1 fetch first 10 rows only
select distinct department as sorted_department from employees
select distinct department from employees
select * from employees

--Assignemnt#2
select student_name from students where age between 18 and 20 
select student_name from students where student_name like '%ch%' or student_name like '%nd'
select * from students where (student_name like '%ae%' or student_name like '%ph%') and age!=19 
select * from students order by age desc
select * from students order by age desc fetch first 4 rows only
select * from students where age<=20 and student_no between 3 and 5 or student_no =7 or age>20 and student_no<=4 

--Practice 3---Functions
select upper(first_name),lower(department) from employees
select length(first_name),lower(department) from employees
select trim('Hello')
select length(trim('   Hello   '))
select first_name || last_name from employees---Concatenation
select first_name ||' '|| last_name from employees
select first_name ||' '|| last_name as full_name from employees
select first_name ||' '|| last_name as full_name,department from employees
select first_name ||' '|| last_name as full_name,(salary>140000) from employees order by salary desc
select department, ('Clothing' in (department,first_name)) from employees
select department,(department like '%oth%')from employees

select 'Department'as test_data
select substring('this is test data' from 1 for 4)as test_data_extracted
select substring('this is test data' from 3)as test_data_extracted
select department, replace (department,'Clothing','Attire') as modify_data,department ||' Department'from departments
select position ('@' in email) from employees
select substring (email,position ('@' in email)) from employees
select substring (email,position ('@' in email)+1) from employees
select email, substring (email,position ('@' in email)+1)as formated_col from employees
select coalesce (email,'NONE')as email from employees





--Assingment #3
select * from professors
SELECT last_name || ' ' || 'works in the '|| department || ' department'FROM professors
select last_name, replace (last_name,'Chong','Chong works in the science department') as test_data from professors
select 'It is '|| (salary>95000)||' that professor '||last_name||' is highly paid' from professors
select last_name, upper(substring(department from 1 for 3)) as departments,salary,hire_date from professors
select min(salary),max(salary) from professors where last_name!='Wilson' 
select min(hire_date) from professors 

--Practive 4---Group by
create table cars (make varchar(10))
insert into cars values ('Honda')
insert into cars values ('Honda')
insert into cars values ('Honda')
insert into cars values ('Toyota')
insert into cars values ('Toyota')
insert into cars values ('Nissan')
insert into cars values ('BMW')
select * from cars
select count(*) from cars group by make
insert into cars values (NULL);
insert into cars values (NULL);
insert into cars values (NULL);
insert into cars values (NULL);

select make from cars group by make
select make, count(*) from cars group by make
select department, sum(salary)as combine_salary from employees where 1=1 group by department
select department, sum(salary)as combine_salary from employees where region_id in (4,5,6,7) group by department
select * from employees
select department, count(employee_id)as total_employee from employees where 1=1 group by department
select department, count(employee_id)as total_empoyees,round (avg(salary))as avg_salary,min(salary)as min_salary,max(salary)_max_salary from employees group by department
select department, count(employee_id)as total_employees,round (avg(salary))as avg_salary,min(salary)as min_salary,max(salary)_max_salary from employees group by department order by total_employees desc
select department, count(employee_id)as total_employees,round (avg(salary))as avg_salary,min(salary)as min_salary,max(salary)_max_salary from employees where salary>70000 group by department order by total_employees desc
select department,gender, count(*)as total_employees from employees group by department, gender order by department
select department, count(*) from employees group by department having count(*)<35 order by department
select * from employees
select first_name,count(*)as firstname_combined from employees group by first_name
select first_name,count(*)as firstname_combined from employees group by first_name having count(*)>2

select department from employees group by department
select substring (email,position ('@' in email)+1)as modify_email, count(*) from employees group by modify_email
select substring (email,position ('@' in email)+1)as modify_email, count(*) from employees where email is not null group by modify_email
select substring (email,position ('@' in email)+1)as modify_email, count(*) from employees where email is not null group by modify_email order by count(*) desc
select gender,region_id, round(avg(salary)) as avg_salary, min(salary) as min_salary, max(salary)as max_salary from employees group by region_id, gender order by gender, region_id

--Assignment #4

select * from fruit_imports
SELECT state FROM fruit_imports GROUP BY state ORDER BY SUM(supply) desc LIMIT 1
select season, max(cost_per_unit)as cost_per_unit from fruit_imports group by season 
select state,name,count(name)as fruit_count from fruit_imports group by state, name having count(name)>1
select season,count(name) as fruit_count from fruit_imports group by season having count(name) between 3 and 4
SELECT state, SUM(supply * cost_per_unit) total_cost FROM fruit_imports GROUP BY state ORDER BY total_cost desc LIMIT 1
SELECT COUNT(COALESCE(fruit_name, 'SOMEVALUE')) FROM fruits;

select * from regions

select first_name, department, 
(select max(salary) from employees group by salary order by salary desc limit 1)-salary from employees where region_id in
(select region_id from regions where country='Asia' or country ='Canada')






--practice 5--sub quries
select * from employees where department in (select department from departments)
select * from (select * from employees where salary>150000) a
select a.first_name,a.salary from (select * from employees where salary>150000) a
select a.employee_name,a.salary_annual from (select first_name as employee_name, salary as salary_annual from employees where salary>150000) a
select * from departments

select * from employees where department in (select department from departments where division ='Electronics')

select * from regions
select * from employees

select * from employees where salary>130000 and region_id in (select region_id from regions where country ='Asia' or country='Canada')
select first_name, department,(select max(salary) from employees)-salary as Difference_from_max from employees where region_id in (select region_id from regions where country ='Asia' or country='Canada')
select * from employees where region_id in (select region_id from regions where country='United States')
select * from employees where region_id > ALL (select region_id from regions where country='United States')

select * from employees where department = any (select department from departments where division='Kids') and hire_date> All(select hire_date from employees where department='Maintenance')

select salary from (select count(*),salary from employees group by salary order by count(*) desc, salary desc limit 1)a

select a.salary from (select salary, count(*) from employees group by salary order by count(*),salary desc limit 1)a

select salary from employees group by salary having count(*)>=all(select count(*) from employees group by salary) order by salary desc limit 1

select  count(*) from dupes group by name

select * from dupes where id in(select min(id) from dupes group by name)

select round(avg(salary)) from employees where salary not in ((select min(salary) from employees),(select max(salary) from employees))

select * from students
select * from student_enrollment
select * from courses


---Assingment # 5
select student_name from students where student_no in (select student_no from student_enrollment where course_no in (select course_no from courses where course_title='Physics'or course_title='US History'))

select student_name from students where student_no in (select student_no from student_enrollment where course_no in (select count(course_no) from courses group by student_no order by count(course_no) desc limit 1 )) 

select student_name from students where student_no in (select count(student_no) from student_enrollment group by course_no order by count(student_no)desc limit 1)

select student_name , age from students where age in (select max(age) from students)

---Practice 6--Case statement/If/Else
select first_name, salary, case when salary<100000 then 'Under paid' when salary>100000 then 'Over paid'else 'Un paid' end from employees order by salary desc

select first_name, salary, case when salary<100000 then 'Under paid' when salary>100000 and salary <160000 then 'Over paid'else 'Executive' end as category from employees order by salary desc

select a.category, count(*) from (select case when salary<100000 then 'Under paid' when salary>100000 and salary <160000 then 'Over paid'else 'Executive' end as category from employees order by salary desc)a group by a.category

select sum(case when salary<100000 then 1 else 0 end)as Under_paid,sum(case when salary>100000 and salary<160000 then 1 else 0 end)as WEll_Paid, sum (case when salary >160000 then 1 else 0 end)as Executive from employees

select department, count(*) from employees where department in ('Sports','Tools','Clothing','Computers') group by department 

select sum(case when department='Sports' then 1 else 0 end)as Sports_department,sum(case when department='Tools'then 1 else 0 end)as tools_department, sum(case when department='Clothing'then 1 else 0 end)as clothing_department, sum(case when department='Computers'then 1 else 0 end)as Computer_department from employees


select first_name, case when region_id=1 then (select country from regions where region_id=1) end region_1,
case when region_id=2 then (select country from regions where region_id=2) end region_2 ,
case when region_id=3 then (select country from regions where region_id=1) end region_3 ,
case when region_id=4 then (select country from regions where region_id=1) end region_4 ,
case when region_id=5 then (select country from regions where region_id=1) end region_5 ,
case when region_id=6 then (select country from regions where region_id=1) end region_6 ,
case when region_id=7 then (select country from regions where region_id=1) end region_7  from employees

select * from regions
select * from employees

select count(a.region_1)+count(a.region_2)+count(a.region_3)as United_states, count(a.region_4)+count(a.region_5)as Asia,count(a.region_6)+count(a.region_7)as Canada from 
(select first_name, case when region_id=1 then (select country from regions where region_id=1) end region_1,
case when region_id=2 then (select country from regions where region_id=2) end region_2 ,
case when region_id=3 then (select country from regions where region_id=1) end region_3 ,
case when region_id=4 then (select country from regions where region_id=1) end region_4 ,
case when region_id=5 then (select country from regions where region_id=1) end region_5 ,
case when region_id=6 then (select country from regions where region_id=1) end region_6 ,
case when region_id=7 then (select country from regions where region_id=1) end region_7 from employees) a

select united_states+asia+canada as Total from(
select count(a.region_1)+count(a.region_2)+count(a.region_3)as United_states, count(a.region_4)+count(a.region_5)as Asia,count(a.region_6)+count(a.region_7)as Canada from 
(select first_name, case when region_id=1 then (select country from regions where region_id=1) end region_1,
case when region_id=2 then (select country from regions where region_id=2) end region_2 ,
case when region_id=3 then (select country from regions where region_id=1) end region_3 ,
case when region_id=4 then (select country from regions where region_id=1) end region_4 ,
case when region_id=5 then (select country from regions where region_id=1) end region_5 ,
case when region_id=6 then (select country from regions where region_id=1) end region_6 ,
case when region_id=7 then (select country from regions where region_id=1) end region_7 from employees) a)b


---Assingment #6
select * from fruit_imports


select name,total_supply, case when total_supply<20000 then 'Low' when total_supply>=20000 and total_supply<50000 then 'Enough'when total_supply>50000 then 'Full'end from (select name, sum(supply)as total_supply from fruit_imports group by name order by name)a

select season, sum(supply*cost_per_unit) as total_cost from fruit_imports group by season

select a.season_1 as Winter,a.season_2 as Summer,a.season_3 as All_Year,a.season_4 as Spring,a.season_5 as Fall
from (select case when season='Winter' then sum(supply*cost_per_unit) end season_1,
	  case when season='Summer' then sum(supply*cost_per_unit) end season_2,
	  case when season='All Year' then sum(supply*cost_per_unit) end season_3,
	  case when season='Spring' then sum(supply*cost_per_unit) end season_4,
	  case when season='Fall' then sum(supply*cost_per_unit) end season_5
	  from fruit_imports group by season)a

SELECT SUM(CASE WHEN season = 'Winter' THEN total_cost end) as Winter_total,
SUM(CASE WHEN season = 'Summer' THEN total_cost end) as Summer_total,
SUM(CASE WHEN season = 'Spring' THEN total_cost end) as Spring_total,
SUM(CASE WHEN season = 'Fall' THEN total_cost end) as Spring_total,
SUM(CASE WHEN season = 'All Year' THEN total_cost end) as Spring_total
FROM (
select season, sum(supply * cost_per_unit) total_cost
from fruit_imports
group by season
    ) a


select sum(case when season = 'Winter' then (supply * cost_per_unit) end) Winter,

   sum(case when season = 'Summer' then (supply * cost_per_unit) end) Summer,

   sum(case when season = 'All Year' then (supply * cost_per_unit) end) All_Year,

   sum(case when season = 'Spring' then (supply * cost_per_unit) end) Spring,

   sum(case when season = 'Fall' then (supply * cost_per_unit) end) Fall

from fruit_imports


---Practice 7---Advance Sub quries
select first_name,salary from employees where salary> (select avg(salary) from employees)

select first_name,salary from employees e1 where salary> (select round(avg(salary)) from employees e2 where e1.department=e2.department)

select first_name,salary, department,(select round(avg(salary)) from employees e2 where e1.department=e2.department)as avg_depart_sal from employees e1

select department from departments where 38< (select count(*) as deprt_count from employees e where e.department=departments.department)

select distinct department from employees e1 where 38< (select count(*)from employees e2 where e1.department=e2.department)

select department from employees e1 where 38< (select count(*)from employees e2 where e1.department=e2.department) group by department

select department,max(salary) from employees e1 where 38< (select count(*)from employees e2 where e1.department=e2.department) group by department

select department, (select max(salary)from employees where department=d.department) from departments d where 38<(select count(*) from employees e2 where d.department=e2.department)

select department,first_name,salary from employees e1 where salary=(select max(salary)as max_sal from employees e2 where e1.department=e2.department) or salary=(select min(salary) from employees e2 where e1.department=e2.department)  order by department

select case when max(salary)=max(salary) then 'ok' end from employees group by department

select department,first_name,salary, from employees e1 where salary=(select max(salary)as max_sal from employees e2 where e1.department=e2.department) or salary=(select min(salary) from employees e2 where e1.department=e2.department) order by department

select department,first_name,salary, case when salary= max_by_department then 'Highest pay'when salary= min_by_department then 'Minimum pay'end as Sal_in_depart
from (select department,first_name,salary,(select max(salary) from employees e2 where e1.department=e2.department) as max_by_department,
(select min(salary)from employees e2 where e1.department=e2.department) as min_by_department from employees e1 order by department)a where salary=max_by_department or salary=min_by_department


---Practice 8---Multiple tables with Joins/Views
select first_name, country from employees, regions where employees.region_id=regions.region_id

select first_name,email, division from employees, departments where employees.department=departments.department and email is not null

select first_name,email, division,country from employees, departments,regions where employees.department=departments.department and employees.region_id=regions.region_id and email is not null

select first_name,email, division,employees.department,country from employees, departments,regions where employees.department=departments.department and employees.region_id=regions.region_id and email is not null

select country, count(employee_id) from regions,employees where regions.region_id=employees.region_id group by country

select country, count(employee_id) from employees e, (select * from regions)r where r.region_id=e.region_id group by country

select first_name, country from employees inner join regions on employees.region_id=regions.region_id

select first_name,email,division, country from employees inner join departments on employees.department=departments.department inner join regions on employees.region_id=regions.region_id

select distinct employees.department, departments.department from employees left join departments on employees.department=departments.department

select distinct employees.department,departments.department from employees left join departments on employees.department=departments.department where departments.department is NULL

select department from employees union select department from departments

select distinct department from employees union all select department from departments

select department from employees except select department from departments

select department from departments except select department from employees

select department,count(first_name) from employees union select department from departments order by department

select department, count(first_name) from employees group by department union all select 'Total',count(*) from employees 

select count (*) from (select * from employees a , employees b)a

select * from employees cross join departments

select distinct first_name, department, hire_date,country from employees inner join regions on employees.region_id=regions.region_id where
hire_date=(select min(hire_date)from employees) or hire_date=(select max(hire_date)from employees) 

---OR

select distinct first_name, department, hire_date,country
from employees inner join regions on employees.region_id=regions.region_id where
hire_date=(select min(hire_date)from employees)
union
select distinct first_name, department, hire_date,country
from employees inner join regions on employees.region_id=regions.region_id where
hire_date=(select max(hire_date)from employees)

select student_name, student_enrollment.course_no,last_name from students
inner join student_enrollment on students.student_no=student_enrollment.student_no
inner join teach on student_enrollment.course_no=teach.course_no 





select hire_date,salary,(select sum(salary) from employees e2 where e2.hire_date between e1.hire_date-90 and e1.hire_date) as spending_pattern from employees e1 order by hire_date


----Assignment # 8
--1):Not related

select student_name, student_enrollment.course_no,last_name from students
inner join student_enrollment on students.student_no=student_enrollment.student_no
inner join teach on student_enrollment.course_no=teach.course_no 

---3): The reason for student_name is repeating is becuase some courses are being taught by more than one professor.


select first_name,salary from employees e1 where salary> (select avg(salary) from employees e2 where e1.department=e2.department)



SELECT student_name, course_no, min(last_name)
FROM (
select student_name, student_enrollment.course_no,last_name from students
inner join student_enrollment on students.student_no=student_enrollment.student_no
inner join teach on student_enrollment.course_no=teach.course_no 
    ) a
    GROUP BY student_name, course_no
    ORDER BY student_name, course_no;


SELECT s.student_no, student_name, course_no
FROM students s LEFT JOIN student_enrollment se
    ON s.student_no = se.student_no


----Practice 9/Window Functions OVER()
select first_name, department,(select count(*) from employees e2 where e1.department=e2.department) from employees e1 group by first_name,department 
---OR
select first_name,department,count(*) over(partition by department)from employees
select first_name,department,sum(salary) over(partition by department)from employees
select first_name,department,count(*) over(partition by department) dept_count, count(*) over (partition by region_id) region_id from employees
select first_name,department,region_id,count(*) over(partition by department) dept_count, count(*) over (partition by region_id) region_id from employees
select first_name,department,count(*) over()from employees where region_id=3
select first_name,department,count(*) over(partition by department)from employees where region_id=3

select first_name,hire_date,salary,sum(salary) over(order by hire_date range between unbounded preceding and current row) as running_total from employees
select first_name,hire_date,department,salary,sum(salary) over(partition by department order by hire_date) as running_total from employees
select first_name,hire_date,department,salary,sum(salary) over(order by hire_date rows between 1 preceding and current row) as running_total from employees
select first_name,hire_date,department,salary,sum(salary) over(order by hire_date rows between 1000 preceding and current row) as running_total from employees

select first_name,email,department,salary,rank() over(partition by department order by salary desc) from employees

select * from(
select first_name,email,department,salary,rank() over(partition by department order by salary desc) from employees
)a where rank=8


select first_name,email,department,salary,ntile(5) over(partition by department order by salary desc) from employees

select first_name,email,department,salary,first_value(salary) over(partition by department order by first_name asc) from employees	
select first_name,email,department,salary,nth_value(salary,5) over(partition by department order by first_name asc) from employees	

select first_name,last_name,salary,lag(salary) over()previous_salary from employees
	
select first_name,last_name,salary,lag(salary) over(order by salary desc)next_higher_salary from employees

select first_name,last_name,salary,lead(salary) over()previous_salary from employees
select first_name,last_name,salary,lead(salary) over(partition by department order by salary desc)previous_salary from employees

select * from sales
select continent,country,city,sum(units_sold) from sales group by grouping sets(continent,country,city)
select continent,country,city,sum(units_sold) from sales group by grouping sets(continent,country,city,())
select continent,country,city,sum(units_sold) from sales group by rollup(continent,country,city)
select continent,country,city,sum(units_sold) from sales group by cube(continent,country,city)


---Final Assignment
select * from students
select * from student_enrollment
select * from courses
select * from student_enrollment where course_no != 'CS180'

select distinct students.student_no from students left join student_enrollment on students.student_no=student_enrollment.student_no
where student_enrollment.student_no not in (select student_no from student_enrollment where course_no ='CS180')

---OR
SELECT * FROM students
WHERE student_no NOT IN (
    SELECT student_no
    FROM student_enrollment
    WHERE course_no = 'CS180'
    );

---OR

SELECT s.student_no, s.student_name, s.age
FROM students s LEFT JOIN student_enrollment se 
    ON s.student_no = se.student_no
GROUP BY s.student_no, s.student_name, s.age
HAVING MAX(CASE WHEN se.course_no = 'CS180'
           THEN 1 ELSE 0 END) = 0



select students.student_no from students left join student_enrollment on students.student_no=student_enrollment.student_no
where student_enrollment.student_no in (select student_no from student_enrollment where course_no='CS110' or course_no='CS107')
except
select student_enrollment.student_no from student_enrollment where course_no='CS110'and course_no='CS107'

---OR

SELECT * 
FROM students
WHERE student_no IN (SELECT student_no
                     FROM student_enrollment
                     WHERE course_no != 'CS110' 
                     AND course_no != 'CS107')

---OR

SELECT s.*
FROM students s, student_enrollment se
WHERE s.student_no = se.student_no
AND se.course_no IN ('CS110', 'CS107')
AND s.student_no NOT IN ( SELECT a.student_no
                          FROM student_enrollment a, student_enrollment b
                          WHERE a.student_no = b.student_no
                          AND a.course_no = 'CS110'
                          AND b.course_no = 'CS107')





select distinct students.student_no from students left join student_enrollment on students.student_no=student_enrollment.student_no
where student_enrollment.student_no in (select student_no from student_enrollment where course_no='CS220')
except
select student_enrollment.student_no from student_enrollment where course_no!='CS220'

---OR
SELECT s.*
FROM students s, student_enrollment se
WHERE s.student_no = se.student_no
AND se.course_no = 'CS220'




select distinct students.student_no from students inner join student_enrollment on students.student_no=student_enrollment.student_no
where student_enrollment.student_no in (select student_no from
(select student_no, count(*)as course_no_from from student_enrollment group by student_no)a
where course_no_from in (1,2))order by student_no

---OR


SELECT s.student_no, s.student_name, s.age
FROM students s, student_enrollment se
WHERE s.student_no = se.student_no
GROUP BY s.student_no, s.student_name, s.age
HAVING COUNT(*) <= 2



select student_name,student_no,age from (select student_name,student_no,age, rank()over (order by age desc) from students)a where rank<=3 


----OR


SELECT s1.*
FROM students s1
WHERE 2 >= (SELECT count(*)
            FROM students s2
            WHERE s2.age < s1.age)




